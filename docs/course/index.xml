<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on ZORRO</title>
    <link>https://Ethan-91.github.io/docs/course/</link>
    <description>Recent content in Tutorial on ZORRO</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://Ethan-91.github.io/docs/course/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Service Interface(SI) Description</title>
      <link>https://Ethan-91.github.io/docs/course/service-interface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Ethan-91.github.io/docs/course/service-interface/</guid>
      <description>Service Interface (SI) Description# SI services are opened on Zro, enabling third parties to connect to Zro via RPC/Web3 and obtain stateless public chain services.
SI is used without maintaining public and private keys created by third parties, so third parties need to create and store their own public and private keys and provide them to SI when needed.
CreateKr# Create public and private keys</description>
    </item>
    
    <item>
      <title>Exchange Interface(EI) Description</title>
      <link>https://Ethan-91.github.io/docs/course/exchange-interface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Ethan-91.github.io/docs/course/exchange-interface/</guid>
      <description>Exchange Interface (EI) Description# The connection method of the EI interface, the exchange service hosts the user&amp;rsquo;s TK, is responsible for tracking the user&amp;rsquo;s UTXO, and provides online and offline signature methods. Compared with the SSI interface, which requires the peer to manage UTXO itself, EI is simpler, safer, and more practical.
Please_note_the_users_and_read_this_article_carefully.#  Seed-&amp;gt; SK-&amp;gt; TK-&amp;gt; PK has a one-to-one correlation, a PK can correlate to a very large number of PKr through random numbers.</description>
    </item>
    
    <item>
      <title>Flight Interface(FI) Description</title>
      <link>https://Ethan-91.github.io/docs/course/flight-interface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Ethan-91.github.io/docs/course/flight-interface/</guid>
      <description>Flight Interface(FI) Description# The FI interface is an upgraded version of SI, supports jsonrpc and console calls, and supports the following features:
 zro does not maintain any keys Provide offline signature scheme User manages UTXO Divided into offline interface (local) and online interface (flight)  Project Docking Solution#  Account Plan (offline)
 Generate random 32byte seeds offline (can be local_genSeed generated through the interface) Save offline by local_seed2Sk generating a private key sk.</description>
    </item>
    
    <item>
      <title>Anonymous tokens issuance principle</title>
      <link>https://Ethan-91.github.io/docs/course/principle-of-anonymous-token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Ethan-91.github.io/docs/course/principle-of-anonymous-token/</guid>
      <description>Anonymous Tokens Issuance Principle# ZORRO is the world&amp;rsquo;s first privacy blockchain system that supports Turing&amp;rsquo;s complete smart contracts. Since it supports smart contracts, it is certainly not a simple smart contracts + anonymous coins. ZORRO deeply integrates the advantages of both: the openness of smart contracts and the closeness of privacy systems. With the support of the two features, ZORRO&amp;rsquo;s smart contracts have very exciting features that can do some amazing things.</description>
    </item>
    
    <item>
      <title>How to start ZORRO Staking on zro</title>
      <link>https://Ethan-91.github.io/docs/course/how-to-staking-using-zro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Ethan-91.github.io/docs/course/how-to-staking-using-zro/</guid>
      <description>How to start ZORRO Staking on zro ?#  The Staking feature is supported by full-node programs
This article is mainly provided for users of full-node background program. Users of the wallet with a graphical interface, please wait for the subsequent documentation.
Staking function will be effective after the height of block 117600
 A brief description of the process of Staking#  POS miners can buy voting shares in the shares pool.</description>
    </item>
    
  </channel>
</rss>